{"version":3,"file":"index.js","sources":["../src/virtual.ts","../src/props.ts","../src/composables/useResizeChange.ts","../src/components/Slot.tsx","../src/components/Item.tsx","../src/virtual-list.tsx"],"sourcesContent":["/**\n * virtual list core calculating center\n */\n\nconst DIRECTION_TYPE = {\n  FRONT: 'FRONT', // scroll up or left\n  BEHIND: 'BEHIND', // scroll down or right\n};\nconst CALC_TYPE = {\n  INIT: 'INIT',\n  FIXED: 'FIXED',\n  DYNAMIC: 'DYNAMIC',\n};\nconst LEADING_BUFFER = 2;\n\nexport default class Virtual {\n  constructor(param, callUpdate) {\n    this.init(param, callUpdate);\n  }\n\n  init(param, callUpdate) {\n    // param data\n    this.param = param;\n    this.callUpdate = callUpdate;\n\n    // size data\n    this.sizes = new Map();\n    this.firstRangeTotalSize = 0;\n    this.firstRangeAverageSize = 0;\n    this.lastCalcIndex = 0;\n    this.fixedSizeValue = 0;\n    this.calcType = CALC_TYPE.INIT;\n\n    // scroll data\n    this.offset = 0;\n    this.direction = '';\n\n    // range data\n    this.range = Object.create(null);\n    if (param) {\n      this.checkRange(0, param.keeps - 1);\n    }\n\n    // benchmark test data\n    // this.__bsearchCalls = 0\n    // this.__getIndexOffsetCalls = 0\n  }\n\n  destroy() {\n    this.init(null, null);\n  }\n\n  // return current render range\n  getRange() {\n    const range = Object.create(null);\n    range.start = this.range.start;\n    range.end = this.range.end;\n    range.padFront = this.range.padFront;\n    range.padBehind = this.range.padBehind;\n    return range;\n  }\n\n  isBehind() {\n    return this.direction === DIRECTION_TYPE.BEHIND;\n  }\n\n  isFront() {\n    return this.direction === DIRECTION_TYPE.FRONT;\n  }\n\n  // return start index offset\n  getOffset(start) {\n    return (\n      (start < 1 ? 0 : this.getIndexOffset(start)) + this.param.slotHeaderSize\n    );\n  }\n\n  updateParam(key, value) {\n    if (this.param && key in this.param) {\n      // if uniqueIds change, find out deleted id and remove from size map\n      if (key === 'uniqueIds') {\n        this.sizes.forEach((v, key) => {\n          if (!value.includes(key)) {\n            this.sizes.delete(key);\n          }\n        });\n      }\n      this.param[key] = value;\n    }\n  }\n\n  // save each size map by id\n  saveSize(id, size) {\n    this.sizes.set(id, size);\n\n    // we assume size type is fixed at the beginning and remember first size value\n    // if there is no size value different from this at next comming saving\n    // we think it's a fixed size list, otherwise is dynamic size list\n    if (this.calcType === CALC_TYPE.INIT) {\n      this.fixedSizeValue = size;\n      this.calcType = CALC_TYPE.FIXED;\n    } else if (\n      this.calcType === CALC_TYPE.FIXED &&\n      this.fixedSizeValue !== size\n    ) {\n      this.calcType = CALC_TYPE.DYNAMIC;\n      // it's no use at all\n      delete this.fixedSizeValue;\n    }\n\n    // calculate the average size only in the first range\n    if (\n      this.calcType !== CALC_TYPE.FIXED &&\n      typeof this.firstRangeTotalSize !== 'undefined'\n    ) {\n      if (\n        this.sizes.size <\n        Math.min(this.param.keeps, this.param.uniqueIds.length)\n      ) {\n        this.firstRangeTotalSize = [...this.sizes.values()].reduce(\n          (acc, val) => acc + val,\n          0,\n        );\n        this.firstRangeAverageSize = Math.round(\n          this.firstRangeTotalSize / this.sizes.size,\n        );\n      } else {\n        // it's done using\n        delete this.firstRangeTotalSize;\n      }\n    }\n  }\n\n  // in some special situation (e.g. length change) we need to update in a row\n  // try goiong to render next range by a leading buffer according to current direction\n  handleDataSourcesChange() {\n    let start = this.range.start;\n\n    if (this.isFront()) {\n      start = start - LEADING_BUFFER;\n    } else if (this.isBehind()) {\n      start = start + LEADING_BUFFER;\n    }\n\n    start = Math.max(start, 0);\n\n    this.updateRange(this.range.start, this.getEndByStart(start));\n  }\n\n  // when slot size change, we also need force update\n  handleSlotSizeChange() {\n    this.handleDataSourcesChange();\n  }\n\n  // calculating range on scroll\n  handleScroll(offset) {\n    this.direction =\n      offset < this.offset ? DIRECTION_TYPE.FRONT : DIRECTION_TYPE.BEHIND;\n    this.offset = offset;\n\n    if (!this.param) {\n      return;\n    }\n\n    if (this.direction === DIRECTION_TYPE.FRONT) {\n      this.handleFront();\n    } else if (this.direction === DIRECTION_TYPE.BEHIND) {\n      this.handleBehind();\n    }\n  }\n\n  // ----------- public method end -----------\n\n  handleFront() {\n    const overs = this.getScrollOvers();\n    // should not change range if start doesn't exceed overs\n    if (overs > this.range.start) {\n      return;\n    }\n\n    // move up start by a buffer length, and make sure its safety\n    const start = Math.max(overs - this.param.buffer, 0);\n    this.checkRange(start, this.getEndByStart(start));\n  }\n\n  handleBehind() {\n    const overs = this.getScrollOvers();\n    // range should not change if scroll overs within buffer\n    if (overs < this.range.start + this.param.buffer) {\n      return;\n    }\n\n    this.checkRange(overs, this.getEndByStart(overs));\n  }\n\n  // return the pass overs according to current scroll offset\n  getScrollOvers() {\n    // if slot header exist, we need subtract its size\n    const offset = this.offset - this.param.slotHeaderSize;\n    if (offset <= 0) {\n      return 0;\n    }\n\n    // if is fixed type, that can be easily\n    if (this.isFixedType()) {\n      return Math.floor(offset / this.fixedSizeValue);\n    }\n\n    let low = 0;\n    let middle = 0;\n    let middleOffset = 0;\n    let high = this.param.uniqueIds.length;\n\n    while (low <= high) {\n      // this.__bsearchCalls++\n      middle = low + Math.floor((high - low) / 2);\n      middleOffset = this.getIndexOffset(middle);\n\n      if (middleOffset === offset) {\n        return middle;\n      } else if (middleOffset < offset) {\n        low = middle + 1;\n      } else if (middleOffset > offset) {\n        high = middle - 1;\n      }\n    }\n\n    return low > 0 ? --low : 0;\n  }\n\n  // return a scroll offset from given index, can efficiency be improved more here?\n  // although the call frequency is very high, its only a superposition of numbers\n  getIndexOffset(givenIndex) {\n    if (!givenIndex) {\n      return 0;\n    }\n\n    let offset = 0;\n    let indexSize = 0;\n    for (let index = 0; index < givenIndex; index++) {\n      // this.__getIndexOffsetCalls++\n      indexSize = this.sizes.get(this.param.uniqueIds[index]);\n      offset =\n        offset +\n        (typeof indexSize === 'number' ? indexSize : this.getEstimateSize());\n    }\n\n    // remember last calculate index\n    this.lastCalcIndex = Math.max(this.lastCalcIndex, givenIndex - 1);\n    this.lastCalcIndex = Math.min(this.lastCalcIndex, this.getLastIndex());\n\n    return offset;\n  }\n\n  // is fixed size type\n  isFixedType() {\n    return this.calcType === CALC_TYPE.FIXED;\n  }\n\n  // return the real last index\n  getLastIndex() {\n    return this.param.uniqueIds.length - 1;\n  }\n\n  // in some conditions range is broke, we need correct it\n  // and then decide whether need update to next range\n  checkRange(start, end) {\n    const keeps = this.param.keeps;\n    const total = this.param.uniqueIds.length;\n\n    // datas less than keeps, render all\n    if (total <= keeps) {\n      start = 0;\n      end = this.getLastIndex();\n    } else if (end - start < keeps - 1) {\n      // if range length is less than keeps, corrent it base on end\n      start = end - keeps + 1;\n    }\n\n    if (this.range.start !== start) {\n      this.updateRange(start, end);\n    }\n  }\n\n  // setting to a new range and rerender\n  updateRange(start, end) {\n    this.range.start = start;\n    this.range.end = end;\n    this.range.padFront = this.getPadFront();\n    this.range.padBehind = this.getPadBehind();\n    this.callUpdate(this.getRange());\n  }\n\n  // return end base on start\n  getEndByStart(start) {\n    const theoryEnd = start + this.param.keeps - 1;\n    const truelyEnd = Math.min(theoryEnd, this.getLastIndex());\n    return truelyEnd;\n  }\n\n  // return total front offset\n  getPadFront() {\n    if (this.isFixedType()) {\n      return this.fixedSizeValue * this.range.start;\n    } else {\n      return this.getIndexOffset(this.range.start);\n    }\n  }\n\n  // return total behind offset\n  getPadBehind() {\n    const end = this.range.end;\n    const lastIndex = this.getLastIndex();\n\n    if (this.isFixedType()) {\n      return (lastIndex - end) * this.fixedSizeValue;\n    }\n\n    // if it's all calculated, return the exactly offset\n    if (this.lastCalcIndex === lastIndex) {\n      return this.getIndexOffset(lastIndex) - this.getIndexOffset(end);\n    } else {\n      // if not, use a estimated value\n      return (lastIndex - end) * this.getEstimateSize();\n    }\n  }\n\n  // get the item estimate size\n  getEstimateSize() {\n    return this.isFixedType()\n      ? this.fixedSizeValue\n      : this.firstRangeAverageSize || this.param.estimateSize;\n  }\n}\n","/**\n * props declaration for default, item and slot component\n */\n\nimport { PropType } from 'vue';\n\nexport const VirtualProps = {\n  dataKey: {\n    type: [String, Function],\n    required: true,\n  },\n  dataSources: {\n    type: Array,\n    required: true,\n    default: () => [],\n  },\n  dataComponent: {\n    type: [Object, Function],\n    required: true,\n  },\n\n  keeps: {\n    type: Number,\n    default: 30,\n  },\n  extraProps: {\n    type: Object,\n  },\n  estimateSize: {\n    type: Number,\n    default: 50,\n  },\n\n  direction: {\n    type: String as PropType<'vertical' | 'horizontal'>,\n    default: 'vertical', // the other value is horizontal\n  },\n  start: {\n    type: Number,\n    default: 0,\n  },\n  offset: {\n    type: Number,\n    default: 0,\n  },\n  topThreshold: {\n    type: Number,\n    default: 0,\n  },\n  bottomThreshold: {\n    type: Number,\n    default: 0,\n  },\n  pageMode: {\n    type: Boolean,\n    default: false,\n  },\n  rootTag: {\n    type: String,\n    default: 'div',\n  },\n  wrapTag: {\n    type: String,\n    default: 'div',\n  },\n  wrapClass: {\n    type: String,\n    default: 'wrap',\n  },\n  wrapStyle: {\n    type: Object,\n  },\n  itemTag: {\n    type: String,\n    default: 'div',\n  },\n  itemClass: {\n    type: String,\n    default: '',\n  },\n  itemClassAdd: {\n    type: Function,\n  },\n  itemStyle: {\n    type: Object,\n  },\n  headerTag: {\n    type: String,\n    default: 'div',\n  },\n  headerClass: {\n    type: String,\n    default: '',\n  },\n  headerStyle: {\n    type: Object,\n  },\n  footerTag: {\n    type: String,\n    default: 'div',\n  },\n  footerClass: {\n    type: String,\n    default: '',\n  },\n  footerStyle: {\n    type: Object,\n  },\n  itemScopedSlots: {\n    type: Object,\n  },\n};\n\nexport const ItemProps = {\n  index: {\n    type: Number,\n  },\n  event: {\n    type: String,\n  },\n  tag: {\n    type: String,\n  },\n  horizontal: {\n    type: Boolean,\n  },\n  source: {\n    type: Object,\n  },\n  component: {\n    type: [Object, Function],\n  },\n  uniqueKey: {\n    type: [String, Number],\n  },\n  extraProps: {\n    type: Object,\n  },\n  scopedSlots: {\n    type: Object,\n  },\n};\n\nexport const SlotProps = {\n  event: {\n    type: String,\n  },\n  uniqueKey: {\n    type: String,\n  },\n  tag: {\n    type: String,\n  },\n  horizontal: {\n    type: Boolean,\n  },\n};\n","import { computed, onMounted, onUnmounted, onUpdated, Ref } from 'vue';\n\nexport default (props: any, rootRef: Ref<HTMLElement | null>, emit: any) => {\n  let resizeObserver: ResizeObserver | null = null;\n  const shapeKey = computed(() =>\n    props.horizontal ? 'offsetWidth' : 'offsetHeight',\n  );\n\n  const getCurrentSize = () => {\n    return rootRef.value ? rootRef.value[shapeKey.value] : 0;\n  };\n\n  // tell parent current size identify by unqiue key\n  const dispatchSizeChange = () => {\n    const { event, uniqueKey, hasInitial } = props;\n    emit(event, uniqueKey, getCurrentSize(), hasInitial);\n  };\n\n  onMounted(() => {\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(() => {\n        dispatchSizeChange();\n      });\n      rootRef.value && resizeObserver.observe(rootRef.value);\n    }\n  });\n\n  onUpdated(() => {\n    dispatchSizeChange();\n  });\n\n  onUnmounted(() => {\n    if (resizeObserver) {\n      resizeObserver.disconnect();\n      resizeObserver = null;\n    }\n  });\n};\n","import { defineComponent, ref } from 'vue';\nimport { SlotProps } from '../props';\nimport useResizeChange from '../composables/useResizeChange';\n\nexport default defineComponent({\n  name: 'VirtualListSlot',\n  props: SlotProps,\n  emits: ['slotResize'],\n  setup(props, { slots, emit }) {\n    const rootRef = ref<HTMLElement | null>(null);\n    useResizeChange(props, rootRef, emit);\n\n    return () => {\n      const { tag: Tag, uniqueKey } = props;\n\n      return (\n        <Tag ref={rootRef} key={uniqueKey}>\n          {slots.default?.()}\n        </Tag>\n      );\n    };\n  },\n});\n","import { defineComponent, ref } from 'vue';\nimport { ItemProps } from '../props';\nimport useResizeChange from '../composables/useResizeChange';\n\nexport const Item = defineComponent({\n  name: 'VirtualListItem',\n  props: ItemProps,\n  emits: ['itemResize'],\n  setup(props, { emit }) {\n    const rootRef = ref<HTMLElement | null>(null);\n    useResizeChange(props, rootRef, emit);\n\n    return () => {\n      const {\n        tag: Tag,\n        component: Comp,\n        extraProps = {},\n        index,\n        source,\n        scopedSlots = {},\n        uniqueKey,\n      } = props;\n      const mergedProps = {\n        ...extraProps,\n        source,\n        index,\n      };\n\n      return (\n        <Tag key={uniqueKey} ref={rootRef}>\n          <Comp {...mergedProps} scopedSlots={scopedSlots} />\n        </Tag>\n      );\n    };\n  },\n});\n","import {\n  defineComponent,\n  onActivated,\n  onBeforeMount,\n  onMounted,\n  onUnmounted,\n  ref,\n  watch,\n} from 'vue';\nimport Virtual from './virtual';\nimport { VirtualProps } from './props';\nimport Slot from './components/Slot';\nimport { Item } from './components/Item';\n\nenum EVENT_TYPE {\n  ITEM = 'itemResize',\n  SLOT = 'slotResize',\n}\n\nenum SLOT_TYPE {\n  HEADER = 'thead', // string value also use for aria role attribute\n  FOOTER = 'tfoot',\n}\n\ninterface Range {\n  start: number;\n  end: number;\n  padFront: number;\n  padBehind: number;\n}\n\nexport default defineComponent({\n  name: 'VirtualList',\n  props: VirtualProps,\n  setup(props, { emit, slots, expose }) {\n    const isHorizontal = props.direction === 'horizontal';\n    const directionKey = isHorizontal ? 'scrollLeft' : 'scrollTop';\n    const range = ref<Range | null>(null);\n    const root = ref<HTMLElement | null>();\n    const shepherd = ref<HTMLDivElement | null>(null);\n    let virtual: Virtual;\n\n    /**\n     * Sortable\n     */\n    const list = ref();\n    onMounted(() => {\n      console.log(list.value);\n    });\n\n    /**\n     * watch\n     */\n    watch(\n      () => props.dataSources.length,\n      () => {\n        virtual.updateParam('uniqueIds', getUniqueIdFromDataSources());\n        virtual.handleDataSourcesChange();\n      },\n    );\n    watch(\n      () => props.keeps,\n      (newValue) => {\n        virtual.updateParam('keeps', newValue);\n        virtual.handleSlotSizeChange();\n      },\n    );\n    watch(\n      () => props.start,\n      (newValue) => {\n        scrollToIndex(newValue);\n      },\n    );\n    watch(\n      () => props.offset,\n      (newValue) => scrollToOffset(newValue),\n    );\n\n    /**\n     * methods\n     */\n    // get item size by id\n    const getSize = (id) => {\n      return virtual.sizes.get(id);\n    };\n    const getOffset = () => {\n      if (props.pageMode) {\n        return (\n          document.documentElement[directionKey] || document.body[directionKey]\n        );\n      } else {\n        return root.value ? Math.ceil(root.value[directionKey]) : 0;\n      }\n    };\n    // return client viewport size\n    const getClientSize = () => {\n      const key = isHorizontal ? 'clientWidth' : 'clientHeight';\n      if (props.pageMode) {\n        return document.documentElement[key] || document.body[key];\n      } else {\n        return root.value ? Math.ceil(root.value[key]) : 0;\n      }\n    };\n    // return all scroll size\n    const getScrollSize = () => {\n      const key = isHorizontal ? 'scrollWidth' : 'scrollHeight';\n      if (props.pageMode) {\n        return document.documentElement[key] || document.body[key];\n      } else {\n        return root.value ? Math.ceil(root.value[key]) : 0;\n      }\n    };\n    const emitEvent = (offset, clientSize, scrollSize, evt) => {\n      emit('scroll', evt, virtual.getRange());\n\n      if (\n        virtual.isFront() &&\n        !!props.dataSources.length &&\n        offset - props.topThreshold <= 0\n      ) {\n        emit('totop');\n      } else if (\n        virtual.isBehind() &&\n        offset + clientSize + props.bottomThreshold >= scrollSize\n      ) {\n        emit('tobottom');\n      }\n    };\n    const onScroll = (evt) => {\n      const offset = getOffset();\n      const clientSize = getClientSize();\n      const scrollSize = getScrollSize();\n\n      // \biOS scroll-spring-back behavior will make direction mistake\n      if (offset < 0 || offset + clientSize > scrollSize + 1 || !scrollSize) {\n        return;\n      }\n\n      virtual.handleScroll(offset);\n      emitEvent(offset, clientSize, scrollSize, evt);\n    };\n\n    const getUniqueIdFromDataSources = () => {\n      const { dataKey, dataSources = [] } = props;\n      return dataSources.map((dataSource: any) =>\n        typeof dataKey === 'function'\n          ? dataKey(dataSource)\n          : dataSource[dataKey],\n      );\n    };\n    const onRangeChanged = (newRange: any) => {\n      range.value = newRange;\n    };\n    const installVirtual = () => {\n      virtual = new Virtual(\n        {\n          slotHeaderSize: 0,\n          slotFooterSize: 0,\n          keeps: props.keeps,\n          estimateSize: props.estimateSize,\n          buffer: Math.round(props.keeps / 3), // recommend for a third of keeps\n          uniqueIds: getUniqueIdFromDataSources(),\n        },\n        onRangeChanged,\n      );\n\n      // sync initial range\n      range.value = virtual.getRange();\n    };\n    // set current scroll position to a expectant index\n    const scrollToIndex = (index: number) => {\n      // scroll to bottom\n      if (index >= props.dataSources.length - 1) {\n        scrollToBottom();\n      } else {\n        const offset = virtual.getOffset(index);\n        scrollToOffset(offset);\n      }\n    };\n    // set current scroll position to a expectant offset\n    const scrollToOffset = (offset: number) => {\n      if (props.pageMode) {\n        document.body[directionKey] = offset;\n        document.documentElement[directionKey] = offset;\n      } else {\n        if (root.value) {\n          root.value[directionKey] = offset;\n        }\n      }\n    };\n    // get the real render slots based on range data\n    // in-place patch strategy will try to reuse components as possible\n    // so those components that are reused will not trigger lifecycle mounted\n    const getRenderSlots = () => {\n      const slots = [];\n      const { start, end } = range.value;\n      const {\n        dataSources,\n        dataKey,\n        itemClass,\n        itemTag,\n        itemStyle,\n        extraProps,\n        dataComponent,\n        itemScopedSlots,\n      } = props;\n      for (let index = start; index <= end; index++) {\n        const dataSource = dataSources[index];\n        if (dataSource) {\n          const uniqueKey =\n            typeof dataKey === 'function'\n              ? dataKey(dataSource)\n              : dataSource[dataKey];\n\n          if (typeof uniqueKey === 'string' || typeof uniqueKey === 'number') {\n            slots.push(\n              <Item\n                index={index}\n                tag={itemTag}\n                event={EVENT_TYPE.ITEM}\n                horizontal={isHorizontal}\n                uniqueKey={uniqueKey}\n                source={dataSource}\n                extraProps={extraProps}\n                component={dataComponent}\n                scopedSlots={itemScopedSlots}\n                style={itemStyle}\n                class={`${itemClass}${\n                  props.itemClassAdd ? ' ' + props.itemClassAdd(index) : ''\n                }`}\n                onItemResize={onItemResized}\n              />,\n            );\n          } else {\n            console.warn(\n              `Cannot get the data-key '${dataKey}' from data-sources.`,\n            );\n          }\n        } else {\n          console.warn(`Cannot get the index '${index}' from data-sources.`);\n        }\n      }\n      return slots;\n    };\n\n    // event called when each item mounted or size changed\n    const onItemResized = (id: string, size: number) => {\n      virtual.saveSize(id, size);\n      emit('resized', id, size);\n    };\n\n    // event called when slot mounted or size changed\n    const onSlotResized = (type: SLOT_TYPE, size: number, hasInit: boolean) => {\n      if (type === SLOT_TYPE.HEADER) {\n        virtual.updateParam('slotHeaderSize', size);\n      } else if (type === SLOT_TYPE.FOOTER) {\n        virtual.updateParam('slotFooterSize', size);\n      }\n\n      if (hasInit) {\n        virtual.handleSlotSizeChange();\n      }\n    };\n\n    // set current scroll position to bottom\n    const scrollToBottom = () => {\n      if (shepherd.value) {\n        const offset =\n          shepherd.value[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n        scrollToOffset(offset);\n\n        // check if it's really scrolled to the bottom\n        // maybe list doesn't render and calculate to last range\n        // so we need retry in next event loop until it really at bottom\n        setTimeout(() => {\n          if (getOffset() + getClientSize() < getScrollSize()) {\n            scrollToBottom();\n          }\n        }, 3);\n      }\n    };\n\n    // when using page mode we need update slot header size manually\n    // taking root offset relative to the browser as slot header size\n    const updatePageModeFront = () => {\n      if (root.value) {\n        const rect = root.value.getBoundingClientRect();\n        const { defaultView } = root.value.ownerDocument;\n        const offsetFront = isHorizontal\n          ? rect.left + defaultView!.pageXOffset\n          : rect.top + defaultView!.pageYOffset;\n        virtual.updateParam('slotHeaderSize', offsetFront);\n      }\n    };\n\n    // get the total number of stored (rendered) items\n    const getSizes = () => {\n      return virtual.sizes.size;\n    };\n\n    /**\n     * life cycles\n     */\n    onBeforeMount(() => {\n      installVirtual();\n    });\n\n    // set back offset when awake from keep-alive\n    onActivated(() => {\n      scrollToOffset(virtual.offset);\n    });\n\n    onMounted(() => {\n      // set position\n      if (props.start) {\n        scrollToIndex(props.start);\n      } else if (props.offset) {\n        scrollToOffset(props.offset);\n      }\n\n      // in page mode we bind scroll event to document\n      if (props.pageMode) {\n        updatePageModeFront();\n        document.addEventListener('scroll', onScroll, {\n          passive: false,\n        });\n      }\n    });\n\n    onUnmounted(() => {\n      virtual.destroy();\n      if (props.pageMode) {\n        document.removeEventListener('scroll', onScroll);\n      }\n    });\n\n    /**\n     * public methods\n     */\n    expose({\n      scrollToBottom,\n      getSizes,\n      getSize,\n      getScrollSize,\n      getClientSize,\n      scrollToOffset,\n      scrollToIndex,\n    });\n\n    return () => {\n      const {\n        pageMode,\n        rootTag: RootTag,\n        wrapTag: WrapTag,\n        wrapClass,\n        wrapStyle,\n        headerTag,\n        headerClass,\n        headerStyle,\n        footerTag,\n        footerClass,\n        footerStyle,\n      } = props;\n      const { padFront, padBehind } = range.value!;\n      const paddingStyle = {\n        padding: isHorizontal\n          ? `0px ${padBehind}px 0px ${padFront}px`\n          : `${padFront}px 0px ${padBehind}px`,\n      };\n      const wrapperStyle = wrapStyle\n        ? Object.assign({}, wrapStyle, paddingStyle)\n        : paddingStyle;\n      const { header, footer } = slots;\n\n      return (\n        <RootTag ref={root} onScroll={!pageMode && onScroll}>\n          {/* header slot */}\n          {header && (\n            <Slot\n              class={headerClass}\n              style={headerStyle}\n              tag={headerTag}\n              event={EVENT_TYPE.SLOT}\n              uniqueKey={SLOT_TYPE.HEADER}\n              onSlotResize={onSlotResized}\n            >\n              {header()}\n            </Slot>\n          )}\n\n          {/* main list */}\n          <WrapTag ref=\"list\" class={wrapClass} style={wrapperStyle}>\n            {getRenderSlots()}\n          </WrapTag>\n\n          {/* footer slot */}\n          {footer && (\n            <Slot\n              class={footerClass}\n              style={footerStyle}\n              tag={footerTag}\n              event={EVENT_TYPE.SLOT}\n              uniqueKey={SLOT_TYPE.FOOTER}\n              onSlotResize={onSlotResized}\n            >\n              {footer()}\n            </Slot>\n          )}\n\n          {/* an empty element use to scroll to bottom */}\n          <div\n            ref={shepherd}\n            style={{\n              width: isHorizontal ? '0px' : '100%',\n              height: isHorizontal ? '100%' : '0px',\n            }}\n          />\n        </RootTag>\n      );\n    };\n  },\n});\n"],"names":["DIRECTION_TYPE","FRONT","BEHIND","CALC_TYPE","INIT","FIXED","DYNAMIC","LEADING_BUFFER","Virtual","param","callUpdate","init","sizes","Map","firstRangeTotalSize","firstRangeAverageSize","lastCalcIndex","fixedSizeValue","calcType","offset","direction","range","Object","create","checkRange","keeps","start","end","padFront","padBehind","getIndexOffset","slotHeaderSize","key","value","forEach","v","includes","id","size","set","Math","min","uniqueIds","length","values","reduce","acc","val","round","isFront","isBehind","max","updateRange","getEndByStart","handleDataSourcesChange","handleFront","handleBehind","overs","getScrollOvers","buffer","isFixedType","floor","low","middle","middleOffset","high","givenIndex","indexSize","index","get","getEstimateSize","getLastIndex","total","getPadFront","getPadBehind","getRange","theoryEnd","truelyEnd","lastIndex","estimateSize","VirtualProps","dataKey","type","String","Function","required","dataSources","Array","dataComponent","Number","extraProps","topThreshold","bottomThreshold","pageMode","Boolean","rootTag","wrapTag","wrapClass","wrapStyle","itemTag","itemClass","itemClassAdd","itemStyle","headerTag","headerClass","headerStyle","footerTag","footerClass","footerStyle","itemScopedSlots","ItemProps","event","tag","horizontal","source","component","uniqueKey","scopedSlots","SlotProps","props","rootRef","emit","resizeObserver","shapeKey","computed","getCurrentSize","dispatchSizeChange","hasInitial","onMounted","ResizeObserver","observe","onUpdated","onUnmounted","disconnect","defineComponent","name","emits","setup","slots","ref","useResizeChange","Tag","_createVNode","Item","Comp","mergedProps","_objectSpread","EVENT_TYPE","SLOT_TYPE","expose","isHorizontal","directionKey","root","shepherd","virtual","list","console","log","watch","updateParam","getUniqueIdFromDataSources","newValue","handleSlotSizeChange","scrollToIndex","scrollToOffset","getSize","getOffset","document","documentElement","body","ceil","getClientSize","getScrollSize","emitEvent","clientSize","scrollSize","evt","onScroll","handleScroll","map","dataSource","onRangeChanged","newRange","installVirtual","slotFooterSize","scrollToBottom","getRenderSlots","push","ITEM","onItemResized","warn","saveSize","onSlotResized","hasInit","HEADER","FOOTER","setTimeout","updatePageModeFront","rect","getBoundingClientRect","defaultView","ownerDocument","offsetFront","left","pageXOffset","top","pageYOffset","getSizes","onBeforeMount","onActivated","addEventListener","passive","destroy","removeEventListener","RootTag","WrapTag","paddingStyle","padding","wrapperStyle","assign","header","footer","SLOT","width","height"],"mappings":"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"}